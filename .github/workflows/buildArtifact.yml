name: On Push - Build and Deploy WebApp

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:

      ARTIFACT_NAME: csye6225-webapp-${{ github.run_number }}.zip
      CODEDEPLOY_APPLICATION_NAME: csye6225-webapp
      CODEDEPLOY_GROUP_NAME: csye6225-webapp-deployment
      AWS_REGION: us-east-1

    strategy:
      matrix:
        node-version: [14.x]

    steps:

    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install Dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y wget zip unzip jq

    # - name: Install awscli
    #   run: |
        
    #     curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    #     unzip awscliv2.zip
    #     sudo ./aws/install

    - name: Built Deployment Artifacts
      run: |
      
        mkdir codedeploy_artifact
        zip -r build_artifact .
        pwd
        mv build_artifact.zip codedeploy_artifact
        cd codedeploy_artifact

    - name: Configuring AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Upload Artifact Zip to S3
      run: |
        aws s3 sync ./codedeploy_artifact s3://${{secrets.CODEDEPLOY_BUCKET}}
        echo ${{secrets.CODEDEPLOY_BUCKET}}

    - name: Make CodeDeploy API call
      run: |
       output=$(aws deploy create-deployment \
          --application-name csye6225-webapp \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name csye6225-webapp-deployment \
          --description "CSYE6255 - CodeDeploy" \
          --s3-location bucket=${{secrets.CODEDEPLOY_BUCKET}},key=build_artifact.zip,bundleType=zip \
          --region ${{secrets.AWS_REGION}} \
          --output json)
          depId=$(echo $output | jq -r '.deploymentId')
          aws deploy wait deployment-successful --deployment-id $depId
        